revision: "1"
rules:
- aspects:
  - adapter: prometheus
    kind: metrics
    params:
      metrics:
      - descriptor_name: response_size
        value: response.size | 0
        labels:
          source: source.service | "unknown"
          target: target.service | "unknown"
          service: target.labels["app"] | "unknown"
          method: request.path | "unknown"
          version: target.labels["version"] | "unknown"
          response_code: response.code | 200
  - kind: metrics
    adapter: prometheus
    params:
      metrics:
      - descriptor_name: request_count
        # we want to increment this counter by 1 for each unique (source, target, service, method, response_code) tuple
        value: "1"
        labels:
          source: source.labels["app"] | "unknown"
          target: target.service | "unknown"
          service: target.labels["app"] | "unknown"
          method: request.path | "unknown"
          version: target.labels["version"] | "unknown"
          response_code: response.code | 200
      - descriptor_name:  request_duration
        value: response.latency | response.duration | "0ms"
        labels:
          source: source.labels["app"] | "unknown"
          target: target.service | "unknown"
          service: target.labels["app"] | "unknown"
          method: request.path | "unknown"
          version: target.labels["version"] | "unknown"
          response_code: response.code | 200
  - kind: access-logs
    params:
      logName: combined_log
      log:
        descriptor_name: accesslog.combined
        template_expressions:
          originIp: origin.ip
          sourceUser: origin.user
          timestamp: request.time
          method: request.method
          url: request.path
          protocol: request.scheme
          responseCode: response.code
          responseSize: response.size
          referer: request.referer
          userAgent: request.headers["user-agent"]
        labels:
          originIp: origin.ip
          sourceUser: origin.user
          timestamp: request.time
          method: request.method
          url: request.path
          protocol: request.scheme
          responseCode: response.code
          responseSize: response.size
          referer: request.referer
          userAgent: request.headers["user-agent"]
